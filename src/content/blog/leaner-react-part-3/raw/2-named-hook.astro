---
import { Code } from "astro:components";
---

<Code
  code={`import { useState, useEffect, useRef, RefObject } from "react";

export function LazyComponent() {
  const elementRef = useRef<HTMLDivElement>(null);

  const isVisible = useIsVisible(elementRef);

  return (
    <div ref={elementRef} style={{ minHeight: "100vh", padding: "20px" }}>
      {isVisible ? (
        <h2>ðŸŽ‰ I am now visible! ðŸŽ‰</h2>
        ) : (
        <h2>Scroll down to reveal me ðŸ‘‡</h2>
      )}
    </div>
  );
}

function useIsVisible(ref: RefObject<HTMLDivElement>) {
  const [isVisible, setIsVisible] = useState(false);

  useEffect(() => {
    if (!ref.current) {
      return () => {};
    }

    const observer = new IntersectionObserver(
      ([entry]) => {
        if (!entry.isIntersecting) {
          return;
        }

        setIsVisible(true);
        observer.disconnect();
      },
      { threshold: 0.5 },
  );

  observer.observe(ref.current);

  return () => observer.disconnect();
  }, []);

  return isVisible;
}
`}
  lang="tsx"
  wrap
/>
