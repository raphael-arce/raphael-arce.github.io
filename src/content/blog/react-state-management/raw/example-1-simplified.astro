---
import { Code } from "astro:components";
---

<Code
  code={`
function Root() {
  return (
    <>
      <h2>Root</h2>
      <BranchA/>
      <BranchB/>
    </>
  );
}

function BranchA() {
  const [counterA, setCounterA] = useState(1);
  
  return (
    <>
      <h3>
        BranchA: <i>useState</i>
      </h3>
      <LeaveAA counterA={counterA}/>
      <LeaveAB setCounterA={setCounterA}/>
    </>
  );
}

function LeaveAA({ counterA }: { counterA: number }) {
  return (
    <>
      <h4>LeaveAA</h4>
      <p>X = {counterA}</p>
    </>
  );
}

function LeaveAB({
  setCounterA,
}: {
  setCounterA: React.Dispatch<React.SetStateAction<number>>;
}) {
  return (
    <>
      <h4>LeaveAB</h4>
      <button onClick={() => setCounterA((counterA) => counterA * 2)}>
        X*2
      </button>
    </>
  );
}

function BranchB() {
  return (
    <>
      <h3>
        BranchB: <i>zustand</i>
      </h3>
      <LeaveBA/>
      <LeaveBB/>
    </>
  );
}

const useStore = create((set) => ({
  counterB: 1,
  increaseB: () => set((state) => ({counterB: state.counterB * 2})),
}));

function LeaveBA() {
  const counterB = useStore((state) => state.counterB);
  
  return (
    <>
      <h4>LeaveBA</h4>
      <p>Y = {counterB}</p>
    </>
  );
}

function LeaveBB() {
  const increaseB = useStore((state) => state.increaseB);
  
  return (
    <>
      <h4>LeaveBB</h4>
      <button onClick={() => increaseB()}>Y*2</button>
    </>
  );
}`}
  lang="tsx"
  wrap
/>
